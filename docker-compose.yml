services:
  # PostgreSQL for Hive Metastore
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    command: ["postgres", "-c", "password_encryption=md5"]
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./infra/init-databases.sql:/docker-entrypoint-initdb.d/init-databases.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MinIO for data lake storage
  minio:
    image: minio/minio:latest
    ports:
      - "9000:9000"  
      - "9001:9001"
    environment:
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # MinIO initialization - uploads data files to landing layer
  minio-init:
    image: minio/mc:latest
    depends_on:
      minio:
        condition: service_healthy
    volumes:
      - ./data:/data:ro  # Mount data files as read-only
    entrypoint: ["/bin/sh"]
    command: 
      - -c
      - |
        echo 'Starting MinIO initialization...';
        
        # Configure MinIO client
        mc alias set myminio http://minio:9000 minioadmin minioadmin;
        
        # Create bucket if not exists
        mc mb myminio/streampro-data --ignore-existing;
        
        # Upload landing files (only if not already present)
        echo 'Uploading data files to landing layer...';
        mc cp /data/devices_2025-09-09.csv myminio/streampro-data/landing/devices_2025-09-09.csv || echo 'devices file upload failed or already exists';
        mc cp /data/events_2025-09-09.jsonl myminio/streampro-data/landing/events_2025-09-09.jsonl || echo 'events file upload failed or already exists';
        mc cp /data/users_2025-09-09.csv myminio/streampro-data/landing/users_2025-09-09.csv || echo 'users file upload failed or already exists';
        mc cp /data/videos_2025-09-09.csv myminio/streampro-data/landing/videos_2025-09-09.csv || echo 'videos file upload failed or already exists';
        
        echo 'Listing files in landing layer:';
        mc ls myminio/streampro-data/landing/ || echo 'Landing directory not found or empty';
        
        echo 'MinIO initialization complete!';

  # Hive Metastore for Trino
  hive-metastore:
    image: apache/hive:3.1.3
    platform: linux/amd64
    environment:
      - SERVICE_NAME=metastore
      - DB_DRIVER=postgres
      - SKIP_SCHEMA_INIT=false
      - SERVICE_OPTS=-Djavax.jdo.option.ConnectionDriverName=org.postgresql.Driver -Djavax.jdo.option.ConnectionURL=jdbc:postgresql://postgres:5432/metastore -Djavax.jdo.option.ConnectionUserName=metastore -Djavax.jdo.option.ConnectionPassword=metastore -Dhadoop.proxyuser.hive.hosts=* -Dhadoop.proxyuser.hive.groups=*
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "bash", "-c", "echo > /dev/tcp/localhost/9083"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Trino
  trino:
    image: trinodb/trino:latest
    ports:
      - "8081:8080"  # Trino web UI
    environment:
      - TRINO_ENVIRONMENT=development
    volumes:
      - ./infra/trino/etc:/etc/trino:ro
    depends_on:
      minio:
        condition: service_healthy
      hive-metastore:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/v1/info"]
      interval: 30s
      timeout: 10s
      retries: 5


volumes:
  minio_data:
  postgres_data: